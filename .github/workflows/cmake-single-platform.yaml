# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Building of MolSim and included test execution

on: [push]

env:
  BUILD_TYPE: Release
  OUTFILE : on
  BUILD_DOC : off
  TEST : on
  DOWNLOAD_DEPENDENCIES : off

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    #install xerces-c
    - name: install dependencies
      run: sudo apt install libboost-dev libboost-program-options-dev libxerces-c-dev libgtest-dev libspdlog-dev

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBUILD_DOC=${{env.BUILD_DOC}} -DOUTFILE=${{env.OUTFILE}} -DDOWNLOAD_DEPENDENCIES=${{env.DOWNLOAD_DEPENDENCIES}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build -j16

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
